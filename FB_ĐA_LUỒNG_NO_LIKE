CYAN = '\033[96m'
GREEN = '\033[92m'
YELLOW = '\033[93m'
MAGENTA = '\033[95m'
BLUE = '\033[94m'
RED = '\033[91m'
RESET = '\033[0m'

import threading
import time
import os
from selenium.webdriver.support.ui import WebDriverWait
from selenium.common.exceptions import NoSuchElementException
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from datetime import datetime
from selenium.webdriver.common.action_chains import ActionChains
from colorama import Fore, Style
os.system("")
frames = ['|', '/', '-', '\\']  

# H√†m delay chung v·ªõi tham s·ªë cho h√†nh ƒë·ªông v√† th·ªùi gian
def delay_action(second, action_text, is_error=False):
    for i in range(second * 10, 0, -1):
        icon = frames[i % len(frames)]  # Ch·ªçn icon theo b∆∞·ªõc
        color = RED if is_error else CYAN if i % 2 == 0 else BLUE
        bracket_color = YELLOW if i % 2 == 0 else MAGENTA
        print(f"{color}{icon} {action_text} {bracket_color}[{i//10}.{i%10}s]{RESET}", end="\r")
        time.sleep(0.1)
    print(" " * 60, end="\r")   
def delay(second):
    delay_action(second, "ƒêang ch·∫°y job")
def delay_laplai(second):
    delay_action(second, "ƒêang l·∫•y job")
def delay_die(second):
    delay_action(second, "Job die => ƒêang b·ªè qua", is_error=True)
def delay_anti(second):
    delay_action(second, "ƒêang ch·∫°y antiband")
# T·∫°o profile
def tao_profile_moi():
    index = 1
    while True:
        new_profile_path = os.path.join(base_path, f"chrome_profile_{index}")
        if not os.path.exists(new_profile_path):
            break
        index += 1

    print(f"{CYAN}‚û°Ô∏è ƒêang t·∫°o profile chrome_profile_{index}, vui l√≤ng ƒëƒÉng nh·∫≠p GoLike{RESET}")
    driver = create_driver(new_profile_path, headless=False)
    driver.set_window_size(500, 700)
    driver.get("https://app.golike.net/login")
    input("üëâ Sau khi ƒëƒÉng nh·∫≠p xong GoLike, nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
    driver.execute_script("window.open('https://m.facebook.com/login');")
    input("üëâ Sau khi ƒëƒÉng nh·∫≠p xong Facebook, nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
    driver.quit()
    print(f"{GREEN}‚úÖ ƒê√£ t·∫°o v√† l∆∞u chrome_profile_{index}{RESET}")
    return new_profile_path 
base_path = os.path.dirname(os.path.abspath(__file__))
profiles = []        
def load_profiles_from_file():
    profiles = []
    if os.path.exists('profiles.txt'):
        with open('profiles.txt', 'r') as file:     
            profiles = [line.strip().split("\\")[-1] for line in file.readlines()]
    return profiles
profiles = load_profiles_from_file()
def save_profiles_to_file(profiles):
    with open('profiles.txt', 'w') as file:
        for profile in profiles:
            file.write(f"{profile}\n")

def kiem_tra_profile(profiles):
    print(f"{CYAN}===== Danh s√°ch c√°c t√†i kho·∫£n ====={RESET}")
    for idx, profile in enumerate(profiles, start=1):
        print(f"[{idx}] {profile}")
    
    lua_chon = input(f"[W] Nh·∫≠p s·ªë t√†i kho·∫£n mu·ªën ki·ªÉm tra (ho·∫∑c nh·∫≠p 'x' ƒë·ªÉ tho√°t): ").strip()
    if lua_chon.lower() == 'x':
        return
    
    try:
        lua_chon = int(lua_chon)
        if 1 <= lua_chon <= len(profiles):
            profile_path = profiles[lua_chon - 1]
            print(f"{CYAN}‚û°Ô∏è ƒêang ki·ªÉm tra t√†i kho·∫£n: {profile_path}{RESET}")
            
            driver = kt_driver(profile_path)
            driver.set_window_size(500,700)
            # Ki·ªÉm tra GoLike
            driver.get("https://app.golike.net/home")
            driver.execute_script("document.body.style.zoom = '0.80';")
            time.sleep(2)
            input("B·∫•m Enter ƒë·ªÉ ti·∫øp t·ª•c n·∫øu kh√¥ng thay ƒë·ªïi...")
            if "golike.net" in driver.current_url:
                print(f"{Fore.GREEN}[‚úÖ] ƒê√£ ƒëƒÉng nh·∫≠p GoLike: {profile_path}{Style.RESET_ALL}")
            else:
                print(f"{Fore.YELLOW}[...] Ch∆∞a ƒëƒÉng nh·∫≠p GoLike: {profile_path}{Style.RESET_ALL}")
                input("Vui l√≤ng ƒëƒÉng nh·∫≠p GoLike r·ªìi b·∫•m Enter...")
            # Ki·ªÉm tra Facebook
            driver.get("https://www.facebook.com/friends")
            input("B·∫•m Enter ƒë·ªÉ ti·∫øp t·ª•c n·∫øu kh√¥ng thay ƒë·ªïi...")
            time.sleep(3)
            if "facebook.com" in driver.current_url:
                print(f"{Fore.GREEN}[‚úÖ] ƒê√£ ƒëƒÉng nh·∫≠p Facebook: {profile_path}{Style.RESET_ALL}")
            else:
                input("Vui l√≤ng ƒëƒÉng nh·∫≠p Facebook, sau ƒë√≥ b·∫•m Enter...")

            driver.quit()
            print(f"{CYAN}‚û°Ô∏è ƒê√£ ho√†n th√†nh ki·ªÉm tra t√†i kho·∫£n.{RESET}")

        else:
            print(f"{RED}‚ö†Ô∏è S·ªë t√†i kho·∫£n kh√¥ng h·ª£p l·ªá!{RESET}")
    except ValueError:
        print(f"{RED}‚ö†Ô∏è Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!{RESET}")
def kt_driver(profile_path):
    
    options = uc.ChromeOptions()
    options.add_argument(f"--user-data-dir={os.path.abspath(profile_path)}")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--force-device-scale-factor=1")
    options.add_argument("--no-first-run --no-service-autorun --password-store=basic")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-blink-features=AutomationControlled")
    mobile_ua = "Mozilla/5.0 (Linux; Android 9; SM-G960F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36"
    options.add_argument(f"--user-agent={mobile_ua}")
    driver = uc.Chrome(options=options, use_subprocess=True)
    return driver
# H√†m t·∫°o driver v·ªõi profile
def create_driver(profile_path, headless=False):
    
    options = uc.ChromeOptions()
    options.add_argument(f"--user-data-dir={os.path.abspath(profile_path)}")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--force-device-scale-factor=0.4")
    options.add_argument("--no-first-run --no-service-autorun --password-store=basic")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-blink-features=AutomationControlled")
    #mobile_ua = "Mozilla/5.0 (Linux; Android 9; SM-G960F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36"
    #options.add_argument(f"--user-agent={mobile_ua}")
    if headless:
        options.headless = True
        options.add_argument("--window-size=1920,1080")
        options.add_argument('--log-level=3')  # Ch·ªâ hi·ªán l·ªói nghi√™m tr·ªçng
        options.add_argument('--disable-gpu')
        options.add_argument('--disable-software-rasterizer')

    driver = uc.Chrome(options=options, use_subprocess=True)
    return driver
tongxu= 0
biendem = 0
dem_loi = 0
#da_dong = False 
def lam_job_facebook_like(driver, index=0):
    global biendem, tongxu, dem_loi
    try:
        driver.get("https://app.golike.net/jobs/facebook?load_job=false")
        driver.execute_script("document.body.style.zoom = '0.50';")
        delay_laplai(2)
        # Ki·ªÉm tra xu
        kt = driver.find_element(By.XPATH, '/html/body/div[1]/div/div[1]/div[2]/div/div[1]/div[2]/span/div[1]/div/div/div/div/div[1]/h6/span/span')
        text = kt.text.strip()
        xu = int(text) if text.isdigit() else 35
        delay(5)
        kt.click()
        delay(2)
        # chuy·ªÉn snag 
        laylink = driver.find_element(By.XPATH, '/html/body/div[1]/div/div[1]/div[2]/div[2]/div[1]/div/div/a[1]/div[3]/i')
        delay(2)
        laylink.click()
        WebDriverWait(driver, 60).until(EC.number_of_windows_to_be(2))
        handles = driver.window_handles
        if len(handles) > 1:  
            driver.switch_to.window(handles[1])
        delay(20)
        # main
        
        driver.execute_script("window.scrollBy(0, 500);")
        driver.execute_script("window.scrollBy(0, -500);")
        driver.execute_script("window.scrollBy(0, 500);")
        driver.execute_script("window.scrollBy(0, -500);")
        driver.execute_script("window.scrollBy(0, 500);")  
        driver.execute_script("window.scrollBy(0, -500);")
        
        found = False
        try:


            try:
                # like
                modal = driver.find_element(By.XPATH, '//div[@role="dialog"]//div[@aria-label="ƒê√≥ng"]').find_element(By.XPATH, "./ancestor::div[@role='dialog']")
                like = WebDriverWait(modal, 5).until(EC.presence_of_element_located((By.XPATH, './/div[@aria-label="Th√≠ch"]')))
            except:
                like = driver.find_element(By.XPATH, '//div[@aria-label="Th√≠ch"]')
            try:
                found = True
                delay(3)
                ActionChains(driver).move_to_element(like).perform()
                delay(3)
                ActionChains(driver).move_to_element(like).click().perform()
                delay(3)
            except:
                time.sleep(0.1)


            if found:
                handles = driver.window_handles
                driver.switch_to.window(handles[0])
                delay(1)
                # ho√†n th√†nh job golike

                driver.find_element(By.XPATH, '/html/body/div[1]/div/div[1]/div[2]/div[2]/div[2]/div').click()
                delay(2)
                WebDriverWait(driver, 30).until(
                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'button.swal2-confirm.swal2-styled'))
                ).click()
                delay_anti(1)
                # Quay l·∫°i tab Fb v√† **KH√îNG** h·ªßy like
                handles = driver.window_handles
                driver.switch_to.window(handles[1])
                # text_to_find = 'Gi·ªù b·∫°n ch∆∞a d√πng ƒë∆∞·ª£c t√≠nh nƒÉng n√†y'
                # try:
                #     WebDriverWait(driver, 1).until(EC.presence_of_element_located((By.XPATH, f"//*[contains(text(), '{text_to_find}')]")))
                #     return False
                #
                # except Exception as e:
                #     time.sleep(0.5)
                #     try:
                #         ActionChains(driver).move_to_element(like).click().perform()
                #
                #     except:
                #         try:
                #             modal = driver.find_element(By.XPATH, '//div[@role="dialog"]//div[@aria-label="ƒê√≥ng"]').find_element(By.XPATH, "./ancestor::div[@role='dialog']")
                #             like = WebDriverWait(modal, 5).until(EC.presence_of_element_located((By.XPATH, './/div[@aria-label="Th√≠ch"]')))
                #         except:
                #             like = driver.find_element(By.XPATH, '//div[@aria-label="Th√≠ch"]')
                #             ActionChains(driver).move_to_element(like).click().perform()
                        
        # Xu li lai job loi + in ra
                delay_anti(1)
                driver.close()
                handles = driver.window_handles
                driver.switch_to.window(handles[0])
                biendem += 1
                tongxu += xu
                print(f" [Lu·ªìng {index}] {CYAN}| {biendem} |  FACEBOOK  | {RED} ·∫®n ID {RESET} |{GREEN} Ho√†n Th√†nh {RESET}| {YELLOW}+{xu}{RESET} | {MAGENTA}T·ªïng xu: {tongxu}{RESET} | {BLUE}Time: {datetime.now().strftime('%H:%M:%S')}{RESET} | ")
                
                #print(f"{CYAN}{NGHIENG}[ FACEBOOK ] {RESET} | {RED} ·∫®n ID {RESET} |{GREEN} Ho√†n Th√†nh {RESET}| {BLUE}Time: {datetime.now().strftime('%H:%M:%S')}{RESET} | ")
            else:
                print("[Lu·ªìng {index}] JOB LOI")
                delay_die(1)
                handles = driver.window_handles
                driver.switch_to.window(handles[1])
                driver.close()
                driver.switch_to.window(handles[0])
                #print(""*20, end="\r")
        except:
            delay_die(1)
            WebDriverWait(driver, 10).until(EC.number_of_windows_to_be(2))

            all_windows = driver.window_handles
            driver.switch_to.window(all_windows[1])
            driver.close()
            driver.switch_to.window(all_windows[0])
            delay_die(1)
                            
            element = driver.find_element(By.XPATH, '/html/body/div[1]/div/div[1]/div[2]/div[3]/div[1]')
            delay_die(1)
            driver.execute_script("arguments[0].scrollIntoView(true);", element)
            delay_die(1)
            element.click()
            driver.find_element(By.XPATH, '/html/body/div[1]/div/div[1]/div[2]/div[3]/div[2]/div/button').click()
            WebDriverWait(driver, 30).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, 'button.swal2-confirm.swal2-styled'))
            ).click()
            print(f"{RED}[Lu·ªìng {index}] B·ªè qua job th√†nh c√¥ng{RESET}", end="\r")
            #print(""*20, end="\r")
    except:
        # Th√™m xem l·ªói v√† t·ª± ƒë√≥ng lu·ªìng
        dem_loi += 1
        delay_die(1)
        print(f"{RED}[Lu·ªìng {index}] L·ªói lu·ªìng {RESET}", end="\r")
        #print(f"{RED}[Lu·ªìng {index}] L·ªói lu·ªìng ({dem_loi}/20) => ƒê·∫°t 20 l·ªói s·∫Ω t·ª± ƒë·ªông d·ª´ng  {RESET}", end="\r")
        #if dem_loi >= 20 :
        #    print(f"\n{RED}[Lu·ªìng {index}] Qu√° 20 l·ªói => ƒê√£ ƒë√≥ng{RESET}")
        #    driver.quit()
        #    return
        #else:
        #    delay_laplai(1)
            
        #print(""*20, end="\r")
        
# H√†m l√†m nhi·ªám v·ª• Facebook Like cho m·ªói profile
def lam_job(profile_path, index=0):
    driver = create_driver(profile_path, headless=False)
    driver.set_window_size(500, 700)
    driver.set_window_position(x=550 * index, y=0 )
    os.system('cls' if os.name == 'nt' else 'clear')
    while True:
        delay_laplai(1)
        lam_job_facebook_like(driver, index)
# H√†m ch·∫°y ƒëa lu·ªìng v·ªõi delay gi·ªØa c√°c lu·ªìng
def chay_da_luong(profile_paths, delay=10):
    threads = []
    for index, profile_path in enumerate(profile_paths):
        time.sleep(delay * index)
        t = threading.Thread(target=lam_job, args=(profile_path, index))
        t.daemon = True 
        print(f"ƒêang m·ªü: {profile_path} [Lu·ªìng {index}] ")
        t.start()
        threads.append(t)
    for t in threads:
        t.join()
def tat_chrome_hieu_ung():
    os.system("")
    frames = ['|', '/', '-', '\\']  
    try:
        print("\033[1;33mƒêang t·∫Øt tr√¨nh duy·ªát Chrome", end="", flush=True)  
        for i in range(20): 
            print(f"\r\033[1;33mƒêang t·∫Øt tr√¨nh duy·ªát Chrome {frames[i % len(frames)]}", end="", flush=True)
            time.sleep(0.2)
        os.system('taskkill /f /im chrome.exe >nul 2>&1')
        time.sleep(0.5)
        print("\n\0033[1;32mƒê√£ t·∫Øt Chrome th√†nh c√¥ng.") 
    except Exception as e:
        print("\n\033[1;31m‚ùå L·ªói khi t·∫Øt Chrome:", e)  
 #Menu UI
def ui():
    while True:
        tat_chrome_hieu_ung()
        delay_anti(15)
        os.system('cls')
        
        print(f"""
{CYAN}===== MENU ====={RESET}
[1]  Th√™m t√†i kho·∫£n
[2]  Ki·ªÉm tra ƒëƒÉng nh·∫≠p
[3]  L√†m nhi·ªám v·ª• (ƒë·ªìng th·ªùi)
[X]  Tho√°t
        """)
        lua_chon = input("[W] Nh·∫≠p l·ª±a ch·ªçn: ").strip()
        profiles = load_profiles_from_file()  # ƒê·ªçc l·∫°i danh s√°ch profile t·ª´ file

        if lua_chon == "1":
            profile_path = tao_profile_moi()
            if profile_path not in profiles:
                profiles.append(profile_path)
                save_profiles_to_file(profiles)  # L∆∞u l·∫°i danh s√°ch profile v√†o file
        elif lua_chon == "2":
            kiem_tra_profile(profiles)

        elif lua_chon == "3":
            try:
                chay_da_luong(profiles)
            except Exception as e:
                print(e)
                break
        elif lua_chon.lower() == "x":
            break
# Th·ª±c thi ch∆∞∆°ng tr√¨nh v·ªõi 3 profile
if __name__ == "__main__":
    ui()






